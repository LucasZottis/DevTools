name: Build and Deploy .NET

on:
  push:
    branches: 
      - master
  pull_request:
    branches: 
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: List files
        run: ls -R

      - name: Check if project file exists
        run: |
          if [ ! -f "./DevToolz/DevToolz.sln" ]; then
            echo "Project file not found!"
            exit 1
          else
            echo "Project file found."
          fi

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'
        
      - name: Restore dependencies
        run: dotnet restore ./DevToolz/DevToolz.sln

      - name: Build
        run: dotnet build ./DevToolz/DevToolz.sln --configuration Release

      - name: Publish
        run: |
          echo "Starting publish..."
          dotnet publish ./DevToolz/DevToolz.sln --configuration Release || { echo "Error: dotnet publish failed!"; exit 1; }

      - name: Setup Git for Actions
        run: |
          git config user.name "Lucas Zottis"
          git config user.email "zottis.lucas@hotmail.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

      - name: Clean untracked files
        run: git clean -fdx

      - name: Fetch deploy branch or create it if it doesn't exist
        run: |
          git fetch origin deploy-branch || echo "No existing deploy branch"
          if git rev-parse --verify origin/deploy-branch; then
            git checkout deploy-branch
            git pull origin deploy-branch --rebase
          else
            git checkout -b deploy-branch
            git push -u origin deploy-branch
          fi

      - name: Clean directory for deployment
        run: |
          git rm -rf . || true
          rm -rf ./*

      - name: Ensure publish directory exists
        run: |
          if [ ! -d "./publish" ]; then
            echo "Publish directory does not exist. Creating it."
            mkdir -p ./publish
          else
            echo "Publish directory already exists."
          fi

      - name: Copy files to deploy branch
        run: |
          if [ -d "./publish" ]; then
            cp -r ./publish ./
            git add .
            git commit -m "Deploy updated build" || echo "No changes to commit"
            git push origin deploy-branch
          else
            echo "No publish directory found. Skipping deployment."
          fi
