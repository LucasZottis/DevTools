name: Deploy Web API .NET to Deploy Branch

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  publish-web-api-self-contained:
    name: Publicação da Web API
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configurar o .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.x" # Especifique a versão do .NET usada

      - name: Publicar Web API
        run: dotnet publish ./DevToolz/DevToolz.sln -c Release -o ./output --self-contained

      - name: Guardar arquivos
        uses: actions/upload-artifact@v4
        with:
          name: web-api-self-contained
          path: |
            ./output
            !./output/*.pdb
            !./output/appsettings.Development.json
          retention-days: 1

  angular-build:
    name: Publicação do Angular
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'  # Versão do Node.js recomendada para Angular 18

      - name: Instalar dependencias
        run: npm install
        working-directory: ./dev-tools

      - name: Run build
        run: npm run build -- --configuration production
        working-directory: ./dev-tools

      
      - name: Guardar arquivos
        uses: actions/upload-artifact@v4
        with:
          name: angular-artifacts
          path: ./dev-tools/dist/dev-tools/browser
          retention-days: 1
          
  deploy-to-local:
    name: Commitar os arquivos para deploy local
    needs: [publish-web-api-self-contained, angular-build]
    runs-on: ubuntu-latest

    steps:
      - name: Trocando o branch para local-deploy-branch
        uses: actions/checkout@v4
        with:
          ref: local-deploy-branch
          fetch-depth: 0  # Certifique-se de buscar todo o histórico de commits

      #- name: Excluir arquivos deixando apenas o .gitignore
        #shell: bash
        #run: find . -type f ! -name '.gitignore' -exec rm -f {} +
        #run: find . -path ./.git -prune -o -type f ! -name '.gitignore' -exec rm -f {} +

      #- name: Verificar se os arquivos foram excluídos
      #  shell: bash
      #  run: ls -alh

      - name: Download dos arquivos Web API Self Contained
        uses: actions/download-artifact@v4
        with:
          name: web-api-self-contained

      - name: Criar pasta wwwroot
        run: mkdir -p ./wwwroot

      - name: Download dos arquivos Angular
        uses: actions/download-artifact@v4
        with:
          name: angular-artifacts
          path: ./wwwroot

      - name: Listar arquivos baixados
        shell: bash
        run: ls -alh
          
#      - name: Check file existence
#        shell: bash
#        run: |
#          if [[ -f "$GITHUB_WORKSPACE/DevToolz.Api.dll" ]]; then
#            echo "Arquivo existe!"
#          else
#            echo "Arquivo não existe!"
#          fi

      - name: Realizando Commit
        uses: EndBug/add-and-commit@v9
        with:
          add: './*'
          author_name: 'GitHub Actions'
          author_email: 'github_actions@github_actions.com'
          message: 'Deploy'
